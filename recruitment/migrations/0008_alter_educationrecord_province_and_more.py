# Safe conversion of EducationRecord.province (CharField -> FK)
# Generated by hand to avoid casting text to bigint errors.

from django.db import migrations, models
import django.db.models.deletion


def copy_text_province_to_fk(apps, schema_editor):
    EducationRecord = apps.get_model("recruitment", "EducationRecord")
    Province = apps.get_model("recruitment", "Province")

    # Build a quick lookup by name/code (case-insensitive)
    name_map = {}
    for p in Province.objects.all():
        if p.name:
            name_map[p.name.strip().lower()] = p.id
        if p.code:
            name_map[p.code.strip().lower()] = p.id

    # Map old text -> FK
    # NOTE: At this point the model still has the old text column "province"
    for rec in EducationRecord.objects.all():
        raw = (rec.province or "").strip()
        if not raw:
            continue
        key = raw.lower()
        pid = name_map.get(key)

        if not pid:
            # try exact case-insensitive name
            m = Province.objects.filter(name__iexact=raw).first()
            if not m:
                # try contains as last resort
                m = Province.objects.filter(name__icontains=raw).first()
            pid = m.id if m else None

        if pid:
            # write to the temporary FK column without fetching the Province row
            setattr(rec, "province_fk_id", pid)
            rec.save(update_fields=["province_fk_id"])


class Migration(migrations.Migration):

    dependencies = [
        ('recruitment', '0007_alter_reference_id_delete_backgroundreference'),
    ]

    operations = [
        # 1) Add a temporary FK column
        migrations.AddField(
            model_name='educationrecord',
            name='province_fk',
            field=models.ForeignKey(
                to='recruitment.province',
                on_delete=django.db.models.deletion.SET_NULL,
                null=True,
                blank=True,
            ),
        ),
        # 2) Copy data from old text column -> new FK
        migrations.RunPython(copy_text_province_to_fk, reverse_code=migrations.RunPython.noop),

        # 3a) Drop the old text column
        migrations.RemoveField(
            model_name='educationrecord',
            name='province',
        ),
        # 3b) Rename FK to final field name
        migrations.RenameField(
            model_name='educationrecord',
            old_name='province_fk',
            new_name='province',
        ),

        # Keep your rec_type choices alteration
        migrations.AlterField(
            model_name='recruitmentcycle',
            name='rec_type',
            field=models.CharField(
                choices=[('REGULAR', 'Regular'), ('RESERVE', 'Reservist'), ('SPECIAL', 'Cadet')],
                db_index=True,
                default='REGULAR',
                max_length=10,
            ),
        ),
    ]
